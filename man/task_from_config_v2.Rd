% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/v2_task_from_config.R
\name{task_from_config_v2}
\alias{task_from_config_v2}
\title{Creating a task with DB as source}
\usage{
task_from_config_v2(
  name,
  cores = 1,
  for_each_plan,
  for_each_argset = NULL,
  universal_argset = NULL,
  upsert_at_end_of_each_plan = FALSE,
  insert_at_end_of_each_plan = FALSE,
  action_name,
  data_output_schemas = NULL,
  data_selector_schemas = NULL,
  data_selector_fn_default = NULL,
  data_selector_fn_specific = NULL
)
}
\arguments{
\item{name}{Name of the task}

\item{cores}{Number of CPU cores}

\item{for_each_plan}{A list, where each unit corresponds to one data extraction. Generally recommended to use \code{plnr::expand_list}.}

\item{for_each_argset}{A list, where each unit corresponds to one analysis within a plan (data extraction). Generally recommended to use \code{plnr::expand_list}.}

\item{universal_argset}{A list, where these argsets are applied to all analyses univerally}

\item{upsert_at_end_of_each_plan}{Do you want to upsert your results automatically at the end of each plan?}

\item{insert_at_end_of_each_plan}{Do you want to insert your results automatically at the end of each plan?}

\item{action_name}{The name of the function that will be called for each analysis}

\item{data_output_schemas}{A named list that maps \code{config$schemas} for use in receiving the output}

\item{data_selector_schemas}{A named list that maps \code{config$schemas} for use in providing data to each plan}

\item{data_selector_fn_default}{A function with arguments \code{schema}, \code{argset} that is the default function to extract data for each unit in data_selector_schemas not covered by \code{data_selection_fn_specific}}

\item{data_selector_fn_specific}{A named list, where each unit contains a function with arguments \code{schema}, \code{argset} that is the default function to extract data for specific units in \code{data_selector_schemas}}
}
\description{
This function is used to create a task when the
source is a database table.
}
\examples{
\dontrun{
task_from_config_v2(
  # name of the task
  name = "ui_normomo_attrib_excel",
  # number of CPU cores
  cores = 1,
  # each unit of the plan corresponds to one data extraction
  for_each_plan = plnr::expand_list(
    location_code = "norge"
  ),
  for_each_argset = NULL,
  universal_argset = NULL,
  upsert_at_end_of_each_plan = FALSE,
  insert_at_end_of_each_plan = FALSE,
  action_name = "sykdomspulsen::ui_normomo_attrib_excel",
  data_output_schemas = NULL,
  # these are the database tables we are interested in
  data_selector_schemas = list(
    "results_normomo_attrib_standard" = sc8::config$schemas$results_normomo_attrib_standard,
    "results_normomo_attrib_irr" = sc8::config$schemas$results_normomo_attrib_irr
  ),
  # for each plan, this is the default for how the data will be extracted for each of the database tables listed above
  data_selector_fn_default = function(schema, argset) {
    schema$dplyr_tbl() \%>\%
      mandatory_db_filter(
        granularity_time = "week",
        granularity_geo = NULL,
        age = "total",
        sex = "total"
      ) \%>\%
      dplyr::filter(location_code == !!argset$location_code) \%>\%
      dplyr::filter(year >= 2020) \%>\%
      dplyr::collect() \%>\%
      as.data.table()
  },
  # for each plan, specific data extractor functions can be given for each database tables listed above
  data_selector_fn_specific = list(
    results_normomo_attrib_irr = function(schema, argset) {
      schema$dplyr_tbl() \%>\%
        mandatory_db_filter(
          granularity_time = "season",
          granularity_geo = NULL,
          age = "total",
          sex = "total"
        ) \%>\%
        dplyr::filter(location_code == !!argset$location_code) \%>\%
        dplyr::filter(year >= 2020) \%>\%
        dplyr::collect() \%>\%
        as.data.table()
    }
  )
)
}
}
